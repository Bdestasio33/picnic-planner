/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Picnic Planner Weather API
 * Weather API for picnic planning using Open-Meteo data
 * OpenAPI spec version: v1
 */
import {
  z as zod
} from 'zod';


export const getApiWeatherForecastQueryCityMin = 0;

export const getApiWeatherForecastQueryCityMax = 100;
export const getApiWeatherForecastQueryStateMin = 0;

export const getApiWeatherForecastQueryStateMax = 100;
export const getApiWeatherForecastQueryCountryMin = 0;

export const getApiWeatherForecastQueryCountryMax = 100;


export const getApiWeatherForecastQueryParams = zod.object({
  "City": zod.string().min(getApiWeatherForecastQueryCityMin).max(getApiWeatherForecastQueryCityMax),
  "State": zod.string().min(getApiWeatherForecastQueryStateMin).max(getApiWeatherForecastQueryStateMax).optional(),
  "Country": zod.string().min(getApiWeatherForecastQueryCountryMin).max(getApiWeatherForecastQueryCountryMax).optional()
})

export const getApiWeatherForecastResponse = zod.object({
  "location": zod.object({
  "latitude": zod.number().optional(),
  "longitude": zod.number().optional(),
  "name": zod.string().nullish()
}).optional(),
  "forecasts": zod.array(zod.object({
  "date": zod.string().nullish(),
  "maxTemperature": zod.number().optional(),
  "minTemperature": zod.number().optional(),
  "precipitationChance": zod.number().optional(),
  "precipitationAmount": zod.number().optional(),
  "humidity": zod.number().optional(),
  "windSpeed": zod.number().optional(),
  "windDirection": zod.number().optional(),
  "condition": zod.object({
  "type": zod.string().nullish(),
  "description": zod.string().nullish(),
  "score": zod.number().optional(),
  "reasons": zod.array(zod.string()).nullish()
}).optional()
})).nullish(),
  "retrievedAt": zod.iso.datetime({}).optional()
})

export const getApiWeatherHistoricalQueryCityMin = 0;

export const getApiWeatherHistoricalQueryCityMax = 100;
export const getApiWeatherHistoricalQueryStateMin = 0;

export const getApiWeatherHistoricalQueryStateMax = 100;
export const getApiWeatherHistoricalQueryCountryMin = 0;

export const getApiWeatherHistoricalQueryCountryMax = 100;
export const getApiWeatherHistoricalQueryDateRegExp = new RegExp('^\\d{4}-\\d{2}-\\d{2}$');
export const getApiWeatherHistoricalQueryYearsBackMax = 50;


export const getApiWeatherHistoricalQueryParams = zod.object({
  "City": zod.string().min(getApiWeatherHistoricalQueryCityMin).max(getApiWeatherHistoricalQueryCityMax),
  "State": zod.string().min(getApiWeatherHistoricalQueryStateMin).max(getApiWeatherHistoricalQueryStateMax).optional(),
  "Country": zod.string().min(getApiWeatherHistoricalQueryCountryMin).max(getApiWeatherHistoricalQueryCountryMax).optional(),
  "Date": zod.string().regex(getApiWeatherHistoricalQueryDateRegExp),
  "YearsBack": zod.number().min(1).max(getApiWeatherHistoricalQueryYearsBackMax).optional()
})

export const getApiWeatherHistoricalResponse = zod.object({
  "location": zod.object({
  "latitude": zod.number().optional(),
  "longitude": zod.number().optional(),
  "name": zod.string().nullish()
}).optional(),
  "requestedDate": zod.string().nullish(),
  "historicalData": zod.object({
  "date": zod.string().nullish(),
  "averageTemperature": zod.number().optional(),
  "averagePrecipitation": zod.number().optional(),
  "averageHumidity": zod.number().optional(),
  "yearlyData": zod.array(zod.object({
  "year": zod.number().optional(),
  "temperature": zod.number().optional(),
  "precipitation": zod.number().optional(),
  "humidity": zod.number().optional()
})).nullish(),
  "yearsOfData": zod.number().optional()
}).optional(),
  "retrievedAt": zod.iso.datetime({}).optional()
})

export const getApiWeatherCombinedQueryCityMin = 0;

export const getApiWeatherCombinedQueryCityMax = 100;
export const getApiWeatherCombinedQueryStateMin = 0;

export const getApiWeatherCombinedQueryStateMax = 100;
export const getApiWeatherCombinedQueryCountryMin = 0;

export const getApiWeatherCombinedQueryCountryMax = 100;
export const getApiWeatherCombinedQueryDateRegExp = new RegExp('^\\d{4}-\\d{2}-\\d{2}$');
export const getApiWeatherCombinedQueryYearsBackMax = 50;


export const getApiWeatherCombinedQueryParams = zod.object({
  "City": zod.string().min(getApiWeatherCombinedQueryCityMin).max(getApiWeatherCombinedQueryCityMax),
  "State": zod.string().min(getApiWeatherCombinedQueryStateMin).max(getApiWeatherCombinedQueryStateMax).optional(),
  "Country": zod.string().min(getApiWeatherCombinedQueryCountryMin).max(getApiWeatherCombinedQueryCountryMax).optional(),
  "Date": zod.string().regex(getApiWeatherCombinedQueryDateRegExp),
  "YearsBack": zod.number().min(1).max(getApiWeatherCombinedQueryYearsBackMax).optional()
})

export const getApiWeatherCombinedResponse = zod.any()

